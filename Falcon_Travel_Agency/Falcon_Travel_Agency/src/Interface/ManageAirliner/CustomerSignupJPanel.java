/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageAirliner;

import Business.Customer;
import Business.TravelAgency;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author niramaykelkar
 */
public class CustomerSignupJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerSignupJPanel
     */
    private JPanel displayPanel;
    private TravelAgency travelAgency;
    private Customer customer;
    public CustomerSignupJPanel(TravelAgency travelAgency, JPanel displayPanel) {
        initComponents();
        this.displayPanel = displayPanel;
        this.travelAgency = travelAgency; 
        this.customer = customer;
        
    }
    
    private void populateDetails(){
        txtName.setText(customer.getName());
        txtUserName.setText(customer.getUserName());
        txtAge.setText(Integer.toString(customer.getAge()));
        txtGender.setText(customer.getGender());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        lblRePassword = new javax.swing.JLabel();
        txtRePassword = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NEW USER SIGNUP");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 13, 246, 51));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 13, 85, 35));

        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 85, -1, -1));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 82, 192, -1));

        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 165, -1, -1));

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 162, 192, -1));

        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 205, -1, -1));

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });
        txtGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGenderKeyTyped(evt);
            }
        });
        add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 202, 192, -1));

        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(435, 347, -1, -1));

        lblUserName.setText("Username:");
        add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 125, -1, -1));

        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserNameKeyTyped(evt);
            }
        });
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 122, 192, -1));

        lblPassword.setText("Password:");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(314, 245, -1, -1));

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordKeyTyped(evt);
            }
        });
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 242, 192, -1));

        lblRePassword.setText("Re-enter Password:");
        add(lblRePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 285, -1, -1));

        txtRePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRePasswordActionPerformed(evt);
            }
        });
        txtRePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRePasswordKeyTyped(evt);
            }
        });
        add(txtRePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 282, 192, -1));

        jLabel2.setText("(Format: xx_xx@xx.com)");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 125, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here
        boolean check = false;  
        txtName.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtUserName.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtAge.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtGender.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtPassword.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtRePassword.setBorder(new LineBorder(new Color(128, 128, 128)));

        lblName.setForeground(Color.BLACK);
        lblUserName.setForeground(Color.BLACK);
        lblAge.setForeground(Color.BLACK);
        lblGender.setForeground(Color.BLACK);
        lblPassword.setForeground(Color.BLACK);
        lblRePassword.setForeground(Color.BLACK);
        
        if (txtName.getText().equals("")) {
            txtName.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblName.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Name can't be empty");
            return;
        }if (txtUserName.getText().equals("")) {
            txtUserName.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUserName.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "UserName can't be empty");
            return;
        }if (!usernamePatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Please enter username in format xx_xx@xx.com");
            txtUserName.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUserName.setForeground(Color.RED);
            return;
        }if (txtAge.getText().equals("")) {
            txtAge.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblAge.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Age can't be empty");
            return;
        }if (txtGender.getText().equals("")) {
            txtGender.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblGender.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Gender can't be empty");
            return;
        }
        if (txtPassword.getText() == null || txtPassword.getText().equals("")) {
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Password Can't be empty");
            return;
        }
        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Password must be atleast be 6 characters long and a combination of number, uppercase letter, lowercase letter and special character $,%,&,#");
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            return;
        }
        if (!txtPassword.getText().equals(txtRePassword.getText())) {
            JOptionPane.showMessageDialog(null, "Passwords need to be same.");
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRePassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            lblRePassword.setForeground(Color.RED);
            return;
        }
        for(Customer customer : travelAgency.getCustomerDirectory()){
            if(customer.getUserName().equals(txtUserName.getText().trim())){
                check=true;
                break;
            }
        }
        if (check) {
            JOptionPane.showMessageDialog(null, "User name already existing!!! Please enter a valid username");    
        }else{
            Customer customer = travelAgency.addCustomer();
            customer.setName(txtName.getText());
            customer.setUserName(txtUserName.getText());
            customer.setAge(Integer.parseInt(txtAge.getText()));
            customer.setGender(txtGender.getText() + "");
            customer.setPassword(txtPassword.getText());
            customer.setTicket(null);
            
            JOptionPane.showMessageDialog(null, "You Have Successfully SignedUp !!!");
            
            txtUserName.setText("");
            txtName.setText("");
            txtGender.setText("");
            txtAge.setText("");
            txtPassword.setText("");
            txtRePassword.setText("");
        }
    }//GEN-LAST:event_btnCreateActionPerformed
        private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[$*#&])[A-Za-z\\d$*#&]{6,}$");
        Matcher m = p.matcher(txtPassword.getText());
        boolean b = m.matches();
        return b;
    }
        
        
    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        // TODO add your handling code here:
        int chk=evt.getKeyCode();
        char ch = evt.getKeyChar();
        if(!Character.isLetter(ch) && (chk!= KeyEvent.VK_BACK_SPACE) && !Character.isWhitespace(ch)){
            evt.consume();
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtGenderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGenderKeyTyped
        // TODO add your handling code here:
        int chk=evt.getKeyCode();
        char ch = evt.getKeyChar();
        if(!Character.isLetter(ch) && (chk!= KeyEvent.VK_BACK_SPACE) && !Character.isWhitespace(ch)){
            evt.consume();
        }
    }//GEN-LAST:event_txtGenderKeyTyped

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        int num = evt.getKeyCode();
        if(!Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        displayPanel.remove(this);
        CardLayout cardLayout = (CardLayout)displayPanel.getLayout();
        cardLayout.next(displayPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtUserNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameKeyTyped

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordKeyTyped

    private void txtRePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRePasswordActionPerformed

    private void txtRePasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRePasswordKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRePasswordKeyTyped

    private boolean usernamePatternCorrect() {
        Pattern p = Pattern.compile("^[a-zA-Z0-9]+_[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m = p.matcher(txtUserName.getText());
        boolean b = m.matches();
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRePassword;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRePassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
