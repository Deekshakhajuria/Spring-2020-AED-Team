/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    //private DoctorTestWorkRequest dtwr;
    //private Applicant applicant;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
//        valueLabel.setText(enterprise.getName());
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        requestTestJButton = new javax.swing.JButton();
        helpSeekerComboBx = new javax.swing.JComboBox();
        getDataForPatient = new javax.swing.JButton();
        weightTextField = new javax.swing.JTextField();
        weight = new javax.swing.JLabel();
        pulseTextField = new javax.swing.JTextField();
        systollicBloodPressure = new javax.swing.JLabel();
        bloodPRessureTextField = new javax.swing.JTextField();
        heartRate = new javax.swing.JLabel();
        heartRateTextField = new javax.swing.JTextField();
        respiratoryRate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        medications1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        appliantTxtArea = new javax.swing.JTextArea();
        medications2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        doctormedicationTxtarea = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        labTestTxtField = new javax.swing.JTextField();
        resultTabBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        requestTestJButton.setText("REQUEST LAB TEST");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 580, 180, 40));

        helpSeekerComboBx.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        helpSeekerComboBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(helpSeekerComboBx, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 179, -1));

        getDataForPatient.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        getDataForPatient.setText("Get Vital Sign Data");
        getDataForPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDataForPatientActionPerformed(evt);
            }
        });
        jPanel1.add(getDataForPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 170, 40));

        weightTextField.setEditable(false);
        jPanel1.add(weightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 170, 180, -1));

        weight.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        weight.setText("WEIGHTS(POUNDS):");
        jPanel1.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, -1, -1));

        pulseTextField.setEditable(false);
        jPanel1.add(pulseTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, 180, -1));

        systollicBloodPressure.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        systollicBloodPressure.setText("PULSE:");
        jPanel1.add(systollicBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, -1, -1));

        bloodPRessureTextField.setEditable(false);
        jPanel1.add(bloodPRessureTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 110, 180, -1));

        heartRate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        heartRate.setText("BLOOD PRESURE:");
        jPanel1.add(heartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));

        heartRateTextField.setEditable(false);
        jPanel1.add(heartRateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 80, 180, -1));

        respiratoryRate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        respiratoryRate.setText("HEART RATE:");
        jPanel1.add(respiratoryRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("Vital Signs");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, -1, -1));

        medications1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        medications1.setText("PROBLEMS OF APPLICANT:");
        jPanel1.add(medications1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, -1, 38));

        appliantTxtArea.setColumns(20);
        appliantTxtArea.setRows(5);
        jScrollPane3.setViewportView(appliantTxtArea);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 230, 180, 90));

        medications2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        medications2.setText("DOCTOR MEDICATIONS :");
        jPanel1.add(medications2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, -1, 38));

        doctormedicationTxtarea.setColumns(20);
        doctormedicationTxtarea.setRows(5);
        jScrollPane4.setViewportView(doctormedicationTxtarea);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, 180, 80));

        sendBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sendBtn.setText("SEND REVIEW TO APPLICANT");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });
        jPanel1.add(sendBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 580, 250, 40));

        vitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BLOOD PRESSURE", "DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, 151));

        viewBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewBtn.setText("VIEW VITAL SIGNS ");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 180, 30));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESSAGE", "SENDER", "RECEIVER", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 450, 130));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("RESULT FROM LAB :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 510, 170, 30));

        labTestTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labTestTxtFieldActionPerformed(evt);
            }
        });
        jPanel1.add(labTestTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 500, 200, 48));

        resultTabBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        resultTabBtn.setText("LAB RESULT");
        resultTabBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultTabBtnActionPerformed(evt);
            }
        });
        jPanel1.add(resultTabBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 120, 30));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backJButton.setText("BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 580, 160, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1174, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1096, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(72, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable()
    {
        DefaultTableModel dtm =(DefaultTableModel) vitalTable.getModel();
        dtm.setRowCount(0);
//        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
//        {
//            if (!(request instanceof LabTestWorkRequest) && !(request instanceof DonorTestWorkRequest) && !(request instanceof ManagerWorkRequest))
//           {
//        dtwr = (DoctorTestWorkRequest)request;
//        
//        
//        appliantTxtArea.setText(dtwr.getMessage());
//        for (VitalSign vs : dtwr.getVitalSignList())
//        {
//            Object row[]= new Object[2];
//            row[0]=vs;
//            row[1]=vs.getTimeStamp();
//            dtm.addRow(row);
//        }
//           }
//        }
        
                
        
    }
    
    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, organization,enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void getDataForPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDataForPatientActionPerformed
        if(helpSeekerComboBx.getSelectedIndex()<0)
        {
            JOptionPane.showMessageDialog(null, "Please Select a Patient to view Data!","warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //Applicant customer = (Applicant)helpSeekerComboBx.getSelectedItem();
        //populateVitalSignsJTable(customer);
        populateTable();
        /*for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
        {

            //Applicant cust = (Applicant)request.getSender().getEmployee();
            if(applicant.equals(customer))
            {
                dtwr = (DoctorTestWorkRequest)request;
                appliantTxtArea.setText(dtwr.getMessage());
            }

        }*/

    }//GEN-LAST:event_getDataForPatientActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
//        try{
//            dtwr.setTestResult(doctormedicationTxtarea.getText());
//            dtwr.setReceiver(userAccount);
//            dtwr.setStatus("Completed");
//            JOptionPane.showMessageDialog(null, "Doctor Medication is Send to Applicant","Success", JOptionPane.PLAIN_MESSAGE);
//            doctormedicationTxtarea.setText("");
//        }catch(Exception e)
//        {
//            JOptionPane.showMessageDialog(null, "Please right proper medication","Success", JOptionPane.PLAIN_MESSAGE);
//        }
        populateRequestTable();
    }//GEN-LAST:event_sendBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:

        int selectedrow = vitalTable.getSelectedRow();

//        if (selectedrow>=0)
//        {
//            VitalSign vs=(VitalSign)vitalTable.getValueAt(selectedrow, 0);
//
//            heartRateTextField.setText(String.valueOf(vs.getHeartRate()));
//            bloodPRessureTextField.setText(String.valueOf(vs.getBloodPressure()));
//            pulseTextField.setText(String.valueOf(vs.getPulse()));
//            weightTextField.setText(String.valueOf(vs.getWeightInPounds()));
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(null,"Please select any row");
//        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void labTestTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labTestTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_labTestTxtFieldActionPerformed

    private void resultTabBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultTabBtnActionPerformed
        // TODO add your handling code here:

//        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
//            if (!(request instanceof DoctorTestWorkRequest) && !(request instanceof DonorTestWorkRequest) && !(request instanceof ManagerWorkRequest))
//            {
//                String result = ((LabTestWorkRequest) request).getTestResult();
//                if(result==null)
//                {
//                    labTestTxtField.setText("Waiting fo Lab to respond");
//                }
//                else
//                {
//                    labTestTxtField.setText(result);
//                }
//            }
//
//        }
        /*int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        DoctorTestWorkRequest request = (DoctorTestWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

        String result = ( request).getTestResult();

        if(result==null)
        {
            labTestTxtField.setText("Waiting fo Lab to respond");
        }
        else
        {
            labTestTxtField.setText(result);
        }*/
    }//GEN-LAST:event_resultTabBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea appliantTxtArea;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bloodPRessureTextField;
    private javax.swing.JTextArea doctormedicationTxtarea;
    private javax.swing.JButton getDataForPatient;
    private javax.swing.JLabel heartRate;
    private javax.swing.JTextField heartRateTextField;
    private javax.swing.JComboBox helpSeekerComboBx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField labTestTxtField;
    private javax.swing.JLabel medications1;
    private javax.swing.JLabel medications2;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel respiratoryRate;
    private javax.swing.JButton resultTabBtn;
    private javax.swing.JButton sendBtn;
    private javax.swing.JLabel systollicBloodPressure;
    private javax.swing.JButton viewBtn;
    private javax.swing.JTable vitalTable;
    private javax.swing.JLabel weight;
    private javax.swing.JTextField weightTextField;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
