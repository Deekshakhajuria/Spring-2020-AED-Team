/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ApplicantRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ApplicantOrganization;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author niramaykelkar
 */
public class VitalSignToDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form VitalSignToDoctorJPanel
     */
    private JPanel userProcessContainer;
    private ApplicantOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    EcoSystem business;
    //private Applicant applicant;
    private DoctorOrganization doctorOrganization;
    public VitalSignToDoctorJPanel(JPanel userProcessContainer, UserAccount userAccount, ApplicantOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business=business;
        populateDoctorComboBx();
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        heartRateTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bldPreTxtField = new javax.swing.JTextField();
        weightTxtField = new javax.swing.JTextField();
        pulseTxtField = new javax.swing.JTextField();
        sendToDoctorJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        problemTxtField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        dctrNameLabel = new javax.swing.JLabel();
        doctorComboBx = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("SEND VITAL SIGNS TO DOCTOR");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        heartRateTxtField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        heartRateTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateTxtFieldActionPerformed(evt);
            }
        });
        jPanel1.add(heartRateTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 186, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("BLOOD PRESSURE");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("PULSE");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("WEIGHT IN POUNDS");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, -1, -1));

        bldPreTxtField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(bldPreTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 186, -1));

        weightTxtField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        weightTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightTxtFieldActionPerformed(evt);
            }
        });
        jPanel1.add(weightTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 186, -1));

        pulseTxtField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(pulseTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 186, -1));

        sendToDoctorJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sendToDoctorJButton.setText("SEND TO DOCTOR");
        sendToDoctorJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToDoctorJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sendToDoctorJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 405, -1, 40));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("HEART RATE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("PROBLEM DESCRIPTION");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, -1, -1));

        problemTxtField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        problemTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                problemTxtFieldActionPerformed(evt);
            }
        });
        jPanel1.add(problemTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 186, -1));

        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESSAGE", "RECEIVER", "STATUS", "RESULT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 549, 200));

        dctrNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        dctrNameLabel.setText("Please Select a doctor you wish to send data");
        jPanel1.add(dctrNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 466, 30));

        doctorComboBx.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        doctorComboBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(doctorComboBx, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 90, 180, 40));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backJButton.setText("< BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 120, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1615, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1615, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
//        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
//            if(!(request instanceof LabTestWorkRequest)&& !(request instanceof DonorTestWorkRequest) && !(request instanceof ManagerWorkRequest))
//            {
//            Object[] row = new Object[4];
//            row[0] = request;
//            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//            row[2] = request.getStatus();
//            String result = ((DoctorTestWorkRequest) request).getTestResult();
//            row[3] = result == null ? "Waiting For Doctor to respond" : result;
//            model.addRow(row);
//            }
//            
//            
//        }
    }
    
    public void populateDoctorComboBx()
    {
//       try
//       {
//        doctorComboBx.removeAllItems();
//        doctorOrganization =  MainValidation.getDoctorOrganization(business, userAccount);
//   //    System.out.println("doctorOrganization"+doctorOrganization.getName());
//       if(doctorOrganization!=null)
//       {
//        if(doctorOrganization.getUserAccountDirectory().getUserAccountList().isEmpty())
//        {
//        JOptionPane.showMessageDialog(null, "No doctors exists in our records as of now!","warning", JOptionPane.WARNING_MESSAGE);
//         return;    
//        }
//         doctorComboBx.removeAllItems();
//        for(UserAccount userAccount : doctorOrganization.getUserAccountDirectory().getUserAccountList())
//        {
//        doctorComboBx.addItem(userAccount);
//        }   
//       }
//       }
//       catch(NullPointerException npe)
//       {
//       JOptionPane.showMessageDialog(null, "Dcotor Organization exists in our records as of now!","warning", JOptionPane.WARNING_MESSAGE);
//         return;       
//       }        
    }
    private void heartRateTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateTxtFieldActionPerformed

    private void weightTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightTxtFieldActionPerformed

    private void sendToDoctorJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToDoctorJButtonActionPerformed
        // TODO add your handling code here:
        UserAccount docAccount = (UserAccount) doctorComboBx.getSelectedItem();
        double HearRate=Double.parseDouble(heartRateTxtField.getText());
        double BloodPressure=Double.parseDouble(bldPreTxtField.getText());
        int Pulse = Integer.parseInt(pulseTxtField.getText());
        double Weight=Double.parseDouble(weightTxtField.getText());
        String message = problemTxtField.getText();
        if( heartRateTxtField.getText().trim().isEmpty() ||
            bldPreTxtField.getText().trim().isEmpty() ||
            pulseTxtField.getText().trim().isEmpty() ||
            weightTxtField.getText().trim().isEmpty() ||
            problemTxtField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all the details");
            return;
        }
//        VitalSign vs =applicant.addVital();
//        vs.setBloodPressure(BloodPressure);
//        vs.setHeartRate(HearRate);
//        vs.setPulse(Pulse);
//        vs.setWeightInPounds(Weight);
//        vs.setTimeStamp(new Date());
//        DoctorTestWorkRequest request = new DoctorTestWorkRequest();
//        request.setMessage(message);
//        request.setSender(userAccount);
//        request.setStatus("Request to Doctor");
//        /*VitalSign vs1=request.addVital();
//        vs1.setBloodPressure(BloodPressure);
//        vs1.setHeartRate(HearRate);
//        vs1.setPulse(Pulse);
//        vs1.setWeightInPounds(Weight);*/
//        ArrayList<VitalSign> vt = new ArrayList<>();
//        vt.add(vs);
//        request.setVitalSignList(vt);

//        for (Network N : business.getNetworkList()) {
//
//            for ( Enterprise e   : N.getEnterpriseDirectory().getEnterpriseList()) {
//
//                e.setEnterpriseType(Enterprise.EnterpriseType.Hospital);
//                if (e.getEnterpriseType().getValue().equals("Hospital"))
//                {
//                    Organization org = null;
//                    // enterprise=((Enterprise)EnterpriseComboBox.getSelectedItem( ));
//                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
//                        if (organization instanceof DoctorOrganization){
//                            org = organization;
//                            break;
//                        }
//                    }
//
//                    if (org!=null){
//                        docAccount.getWorkQueue().getWorkRequestList().add(request);
//                        userAccount.getWorkQueue().getWorkRequestList().add(request);
//                    }
//                }
//
//            }
//        }
        JOptionPane.showMessageDialog(null, "VitalSigns sent to Doctor successfully");
        heartRateTxtField.setText("");
        bldPreTxtField.setText("");
        pulseTxtField.setText("");
        weightTxtField.setText("");
        problemTxtField.setText("");
        populateRequestTable();
    }//GEN-LAST:event_sendToDoctorJButtonActionPerformed

    private void problemTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_problemTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_problemTxtFieldActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bldPreTxtField;
    private javax.swing.JLabel dctrNameLabel;
    private javax.swing.JComboBox doctorComboBx;
    private javax.swing.JTextField heartRateTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField problemTxtField;
    private javax.swing.JTextField pulseTxtField;
    private javax.swing.JButton sendToDoctorJButton;
    private javax.swing.JTextField weightTxtField;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
